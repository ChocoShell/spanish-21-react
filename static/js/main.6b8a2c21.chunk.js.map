{"version":3,"sources":["context/root-context.js","Card.js","CardContainer.js","Player.js","utils.js","PlayerContainer.js","Dealer.js","DealerContainer.js","Spanish21Shoe.js","Spanish21ShoeContainer.js","Spanish21.js","App.js","serviceWorker.js","index.js"],"names":["RootContext","React","createContext","shoe","cardInd","players","activePlayer","dealCard","dealCardToPlayer","playerId","setActivePlayer","setNextPlayer","dealRound","Card","props","className","value","src","process","suit","alt","CardContainer","console","log","this","card","cards","cardId","rank","Component","Player","message","active","bust","onClick","id","total","map","index","key","shuffle","deck","numOfDecks","Math","round","length","i","location1","floor","random","location2","tmp","getDecks","decks","push","rank2Value","sumCards","cardArr","aces","a","PlayerContainer","bind","state","bank","bet","player","Dealer","nextPlayer","DealerContainer","info","Spanish21Shoe","currentCard","cardsLeft","Spanish21ShoeContainer","Spanish21","Consumer","slice","contextType","App","setState","shoeCopy","newShoe","pop","resetRound","j","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b8a2c21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst state = {\r\n  shoe: null,\r\n  cardInd: 0,\r\n  players: [],\r\n  activePlayer: 0,\r\n}\r\n\r\nconst RootContext = React.createContext({\r\n  ...state,\r\n  dealCard: () => {},\r\n  dealCardToPlayer: playerId => {},\r\n  setActivePlayer: playerId => {},\r\n  setNextPlayer: () => {},\r\n  dealRound: () => {},\r\n});\r\n\r\nexport default RootContext;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"value\">\r\n          {props.value}\r\n        </div>\r\n        <img src={`${process.env.PUBLIC_URL}/${props.suit}.png`} alt={props.suit && `${props.suit}`}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport cards from './cards.json';\r\n\r\nimport Card from './Card';\r\n\r\nclass CardContainer extends Component {\r\n  render() {\r\n    console.log(`\"Shoe: ${this.props.card}\"`)\r\n    const card = cards[this.props.cardId]\r\n    return (\r\n      <Card\r\n        value={card && card.rank}\r\n        suit={card && card.suit}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import React from 'react';\r\nimport './Player.css';\r\n\r\nimport Card from './CardContainer';\r\n\r\nconst Player = props => {\r\n  let message;\r\n  if (props.active) {\r\n    if (props.bust) {\r\n      message = <div>BUSTED</div>\r\n    } else {\r\n      message = <button onClick={props.dealCard}> Hit </button>\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"player\" id={props.id}>      \r\n      <div className=\"player-header\">\r\n        <div>\r\n          Player {props.id}: {props.total}\r\n        </div>\r\n        {message}\r\n      </div>\r\n      <div className=\"cards\">\r\n        {\r\n          props.cards.map(\r\n            (card, index) => {\r\n              return <Card key={index} cardId={card}/>\r\n            }\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player;\r\n","import cards from './cards.json'\r\n\r\n// card utils\r\nexport function shuffle(deck)\r\n{\r\n  // for 1000 turns for each deck\r\n  // switch the values of two random cards\r\n  const numOfDecks = Math.round(deck.length/52);\r\n  for (var i = 0; i < (numOfDecks*1000); i++)\r\n  {\r\n    var location1 = Math.floor((Math.random() * deck.length));\r\n    var location2 = Math.floor((Math.random() * deck.length));\r\n    var tmp = deck[location1];\r\n\r\n    deck[location1] = deck[location2];\r\n    deck[location2] = tmp;\r\n  }\r\n  return deck\r\n}\r\n\r\nexport function getDecks(numOfDecks)\r\n{\r\n  var decks = []\r\n  for (var deck = 0; deck < numOfDecks; deck++)\r\n  {\r\n    for (var i = 0; i < cards.length; i++) {\r\n      decks.push(i)  \r\n    }\r\n  }\r\n  return decks;\r\n}\r\n// export function getDecks(numOfDecks)\r\n// //https://www.thatsoftwaredude.com/content/6196/coding-a-card-deck-in-javascript\r\n// {\r\n//   var deck = [];\r\n//   var suits = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\r\n//   // Spanish 21 doesn't use 10's\r\n//   var ranks = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"J\", \"Q\", \"K\"];\r\n//   // var ranks = [\"A\"];\r\n\r\n//   for (var d = 0; d < numOfDecks; d++)\r\n//   {\r\n//     for(var i = 0; i < suits.length; i++)\r\n//     {\r\n//       for(var x = 0; x < ranks.length; x++)\r\n//       {\r\n//         var card = {rank: ranks[x], suit: suits[i]};\r\n//         console.log(`{\"rank\": \"${ranks[x]}\", \"suit\": \"${suits[i]}\"},`)\r\n//         deck.push(card);\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return deck;\r\n// }\r\n\r\nconst rank2Value = {\r\n  \"A\": 11,\r\n  \"2\": 2,\r\n  \"3\": 3,\r\n  \"4\": 4,\r\n  \"5\": 5,\r\n  \"6\": 6,\r\n  \"7\": 7,\r\n  \"8\": 8,\r\n  \"9\": 9,\r\n  \"J\": 10,\r\n  \"Q\": 10,\r\n  \"K\": 10\r\n}\r\n\r\nexport function sumCards(cardArr)\r\n{\r\n  var total = 0\r\n  var aces = 0 // count aces\r\n  for (var i = 0; i < cardArr.length; i++) {\r\n    const card = cards[cardArr[i]]\r\n    const rank = card.rank\r\n    if (rank === \"A\") {\r\n      aces++\r\n    } else {\r\n      const value = rank2Value[rank]\r\n      total += value\r\n    }\r\n  }\r\n  for (var a = 0; a < aces; a++) {\r\n    if (11-aces+a+1 <= total) {\r\n      total += 1\r\n    } else {\r\n      total += 11\r\n    }\r\n  }\r\n return total;\r\n}\r\n\r\n\r\n// Turn into component\r\n// export function renderDeck()\r\n// {\r\n//   document.getElementById(\"deck\").innerHTML = \"\";\r\n\r\n//   for(let i = 0; i < deck.length; i++)\r\n//   {\r\n//     let card = document.createElement(\"div\");\r\n//     let value = document.createElement(\"div\");\r\n//     let suit = document.createElement(\"div\");\r\n//     card.className = \"card\";\r\n//     value.className = \"value\";\r\n//     suit.className = \"suit \" + deck[i].Suit;\r\n\r\n//     value.innerHTML = deck[i].Value;\r\n//     card.appendChild(value);\r\n//     card.appendChild(suit);\r\n\r\n//     document.getElementById(\"deck\").appendChild(card);\r\n//   }\r\n// }\r\n","import React, { Component } from 'react';\r\n\r\nimport Player from './Player';\r\nimport {sumCards} from './utils';\r\n\r\nclass PlayerContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.dealCard = this.dealCard.bind(this)\r\n    this.state = {\r\n      bank: 500,\r\n      bet: 10 // How to handle doubling?\r\n    }\r\n  }\r\n\r\n  // state = {\r\n  //   bank: 500,\r\n  //   bet: 10 // How to handle doubling?\r\n  // }\r\n\r\n  dealCard() {\r\n    this.props.dealCard(this.props.id)\r\n  }\r\n\r\n  render() {\r\n    const {cards, active} = this.props.player\r\n    const total = sumCards(cards)\r\n    const bust = total > 21\r\n    return (\r\n     <Player\r\n      id={this.props.id}\r\n      cards={cards}\r\n      active={active}\r\n      total={total}\r\n      bust={bust}\r\n      dealCard={this.dealCard}\r\n    />\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlayerContainer;\r\n","import React from 'react';\r\nimport './Dealer.css';\r\n\r\nimport Card from './CardContainer';\r\n\r\nconst Dealer = props => {\r\n  return (\r\n    <div className=\"dealer\" id={props.id}>\r\n      {props.bust && \"BUSTED\"}\r\n      { !props.bust &&\r\n        <div>\r\n          <div>\r\n            Dealer: {props.total}\r\n          </div>\r\n          {\r\n            props.cards.map(\r\n              (card, index) => {\r\n                return <Card key={index} cardId={card}/>\r\n              }\r\n            )\r\n          }\r\n        </div>\r\n      }\r\n      {props.active &&\r\n        <div>\r\n        Dealer is Active\r\n        </div>\r\n      }\r\n      <div>\r\n        <button onClick={props.nextPlayer}>Go to next player</button>\r\n        <button onClick={props.dealRound}>Deal Round</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dealer;\r\n","import React, { Component } from 'react';\r\n\r\nimport Dealer from './Dealer';\r\nimport {sumCards} from './utils';\r\n\r\nclass DealerContainer extends Component {\r\n  render() {\r\n    const {cards, active} = this.props.info\r\n    const total = sumCards(cards)\r\n    const bust = total > 21\r\n    return (\r\n      <Dealer\r\n        id={0}\r\n        cards={cards}\r\n        total={total}\r\n        bust={bust}\r\n        active={active}\r\n        nextPlayer={this.props.nextPlayer}\r\n        dealRound={this.props.dealRound}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DealerContainer;\r\n","import React, { useContext } from 'react';\r\nimport './Spanish21Shoe.css';\r\n\r\nimport Card from './CardContainer.js'\r\n\r\n\r\nconst Spanish21Shoe = props => {\r\n  return (\r\n    <div className=\"spanish21-shoe\">\r\n      <Card cardId={props.currentCard}/>\r\n      <div>\r\n        Cards Left: {props.cardsLeft}\r\n      </div>\r\n      <button onClick={props.dealCard}>\r\n        Deal Card\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spanish21Shoe;\r\n","import React, { Component } from 'react';\r\n\r\nimport Spanish21Shoe from './Spanish21Shoe';\r\n\r\n\r\nclass Spanish21ShoeContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Spanish21Shoe\r\n        dealCard={this.props.dealCard}\r\n        cardsLeft={this.props.shoe.length}\r\n        currentCard={this.props.card}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Spanish21ShoeContainer;\r\n","import React, { Component } from 'react';\r\n\r\nimport RootContext from './context/root-context';\r\n\r\nimport './Spanish21.css';\r\n\r\nimport Player from './PlayerContainer';\r\nimport Dealer from './DealerContainer';\r\nimport Spanish21Shoe from './Spanish21ShoeContainer';\r\n\r\n\r\nclass Spanish21 extends Component {\r\n// const Spanish21 = () => {\r\n\r\n\r\n\r\n  // reducer(state, action) {\r\n  //   switch (action.type) {\r\n  //     case 'getCardFromShoe': {\r\n  //       const shoeCopy = this.state.shoe.slice()\r\n  //       const card = shoeCopy.pop()\r\n  //       const newShoe =  shoeCopy.length === 0 ? shuffle(getDecks(8)) : shoeCopy\r\n  //       return {...state, shoe: newShoe}\r\n  //     }\r\n  //     default:\r\n  //       throw new Error();\r\n  //   }\r\n  // }\r\n\r\n  // getCardFromShoe() {\r\n  //   const shoeCopy = this.state.shoe.slice()\r\n  //   const card = shoeCopy.pop()\r\n  //   const newShoe =  shoeCopy.length === 0 ? shuffle(getDecks(8)) : shoeCopy\r\n  //   this.setState({shoe: newShoe})\r\n  //   return card\r\n  // }\r\n  //<Dealer />\r\n  // <div className=\"dealerside\">    \r\n  //         <Spanish21Shoe\r\n  //           shoe={shoe}\r\n  //           card={card}\r\n  //           dealCard={card}\r\n  //         />\r\n  //       </div>\r\n  //       <div className=\"players\">\r\n  //         {\r\n  //           players.map(\r\n  //             (player, index) => {\r\n  //               return (\r\n  //                 <Player\r\n  //                   key={index}\r\n  //                   player={player}\r\n  //                   id={index}\r\n  //                 />\r\n  //               )\r\n  //             }\r\n  //           )\r\n  //         }\r\n  //       </div>\r\n  //       <div>\r\n  //         <button onClick={this.dealRound}>\r\n  //           Deal Round\r\n  //         </button>\r\n  //       </div>\r\n\r\n  // Game should have min and max bet\r\n  render () {\r\n    return (\r\n      <RootContext.Consumer>\r\n        {({shoe, players, dealCard, dealCardToPlayer, setNextPlayer, activePlayer, dealRound}) => (\r\n          <div className=\"game\">\r\n            <div>\r\n              <Dealer\r\n                info={players[0]}\r\n                nextPlayer={setNextPlayer}\r\n                dealRound={dealRound}\r\n              />\r\n              <div className=\"dealerside\">    \r\n                <Spanish21Shoe\r\n                  shoe={shoe}\r\n                  card={shoe[shoe.length-1]}\r\n                  dealCard={dealCard}\r\n                />\r\n              </div>\r\n              {activePlayer}\r\n              <div className=\"players\">\r\n                {\r\n                  players.slice(1).map(\r\n                    (player, index) => {\r\n                      return (\r\n                        <Player\r\n                          key={index+1}\r\n                          player={player}\r\n                          id={index+1}\r\n                          dealCard={() => dealCardToPlayer(index+1)}\r\n                        />\r\n                      )\r\n                    }\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </RootContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nSpanish21.contextType = RootContext;\r\n\r\nexport default Spanish21;\r\n","import React, {useReducer} from 'react';\r\n\r\nimport RootContext from './context/root-context';\r\nimport Spanish21 from './Spanish21';\r\n\r\nimport {shuffle, getDecks} from './utils';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.setActivePlayer = playerId => {\r\n      this.setState(\r\n        state => {\r\n          const players = state.players.map(\r\n            player => ({\r\n              ...player,\r\n              active: false\r\n            })\r\n          )\r\n          players[playerId].active = true\r\n\r\n          return {...state, players, activePlayer: playerId}\r\n        }\r\n      )\r\n    }\r\n\r\n    this.setNextPlayer = () => {\r\n      this.setActivePlayer(\r\n        (this.state.activePlayer + 1) % \r\n        this.state.players.length\r\n      )\r\n    }\r\n\r\n    this.dealCard = () => {\r\n      this.setState(\r\n        state => {\r\n          const shoeCopy = [...state.shoe]\r\n          const newShoe = shoeCopy.length === 0 ? shuffle(getDecks(8)) : shoeCopy\r\n          shoeCopy.pop()\r\n          return {...state, shoe: newShoe}\r\n        }\r\n      )\r\n    }\r\n\r\n    this.dealCardToPlayer = playerId => {\r\n      this.setState(\r\n        state => {\r\n          const players = [...state.players]\r\n          const shoeCopy = [...state.shoe]\r\n          const newShoe = shoeCopy.length === 0 ? shuffle(getDecks(8)) : shoeCopy\r\n\r\n          players[playerId] = {\r\n            ...players[playerId],\r\n            cards: [\r\n              ...players[playerId].cards,\r\n              newShoe.pop()\r\n            ]\r\n          }\r\n          return {...state, players, shoe: newShoe}\r\n        }\r\n      )\r\n    }\r\n\r\n    this.resetRound = () => {\r\n      this.setState(state => {\r\n          for (var i = 0; i < state.players.length; i++) {\r\n            state.players[i].cards = []\r\n          }\r\n          return {players: state.players}\r\n        }\r\n      )\r\n    }\r\n\r\n    this.dealRound = () => {\r\n      this.resetRound()\r\n      for (var j = 0; j < 2; j++) {\r\n        for (var i = 0; i < this.state.players.length; i++) {\r\n          this.dealCardToPlayer(i)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      shoe: [],\r\n      cardInd: 0,\r\n      players: [\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n        {active: false, cards: []},\r\n      ],\r\n      activePlayer: 0,\r\n      dealCard: this.dealCard,\r\n      dealCardToPlayer: this.dealCardToPlayer,\r\n      setActivePlayer: this.setActivePlayer,\r\n      setNextPlayer: this.setNextPlayer,\r\n      dealRound: this.dealRound,\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <RootContext.Provider value={this.state}>\r\n        <Spanish21 />\r\n      </RootContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}