{"version":3,"sources":["Card.js","CardContainer.js","Player.js","utils.js","PlayerContainer.js","Dealer.js","DealerContainer.js","Spanish21Shoe.js","Spanish21ShoeContainer.js","Spanish21.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","value","src","process","suit","alt","CardContainer","console","log","this","card","rank","Component","Player","id","bust","total","cards","map","index","key","shuffle","deck","numOfDecks","Math","round","length","i","location1","floor","random","location2","tmp","getDecks","suits","ranks","d","x","push","rank2Value","PlayerContainer","state","bank","bet","player","cardArr","aces","a","sumCards","Dealer","DealerContainer","Spanish21Shoe","currentCard","cardsLeft","onClick","dealCard","Spanish21ShoeContainer","shoe","Spanish21","dealRound","bind","players","setState","pop","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.025ad760.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"value\">\r\n          {props.value}\r\n        </div>\r\n        <img src={`${process.env.PUBLIC_URL}/${props.suit}.png`} alt={props.suit && `${props.suit}`}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nclass CardContainer extends Component {\r\n  render() {\r\n    console.log(this.props.card)\r\n    return (\r\n      <Card\r\n        value={this.props.card && this.props.card.rank}\r\n        suit={this.props.card && this.props.card.suit}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import React from 'react';\r\nimport './Player.css';\r\n\r\nimport Card from './CardContainer';\r\n\r\nconst Player = props => {\r\n  return (\r\n    <div className=\"player\" id={props.id}>\r\n      {props.bust && \"BUSTED\"}\r\n      { !props.bust &&\r\n        <div>\r\n          <div>\r\n            Player {props.id}: {props.total}\r\n          </div>\r\n          {\r\n            props.cards.map(\r\n              (card, index) => {\r\n                return <Card key={index} card={card}/>\r\n              }\r\n            )\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player;\r\n","// card utils\r\nexport function shuffle(deck)\r\n{\r\n  // for 1000 turns for each deck\r\n  // switch the values of two random cards\r\n  const numOfDecks = Math.round(deck.length/52);\r\n  for (var i = 0; i < (numOfDecks*1000); i++)\r\n  {\r\n    var location1 = Math.floor((Math.random() * deck.length));\r\n    var location2 = Math.floor((Math.random() * deck.length));\r\n    var tmp = deck[location1];\r\n\r\n    deck[location1] = deck[location2];\r\n    deck[location2] = tmp;\r\n  }\r\n  return deck\r\n}\r\n\r\n\r\n\r\nexport function getDecks(numOfDecks)\r\n//https://www.thatsoftwaredude.com/content/6196/coding-a-card-deck-in-javascript\r\n{\r\n  var deck = [];\r\n  var suits = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\r\n  // Spanish 21 doesn't use 10's\r\n  // var ranks = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"J\", \"Q\", \"K\"];\r\n  var ranks = [\"A\"];\r\n\r\n  for (var d = 0; d < numOfDecks; d++)\r\n  {\r\n    for(var i = 0; i < suits.length; i++)\r\n    {\r\n      for(var x = 0; x < ranks.length; x++)\r\n      {\r\n        var card = {rank: ranks[x], suit: suits[i]};\r\n        deck.push(card);\r\n      }\r\n    }\r\n  }\r\n\r\n  return deck;\r\n}\r\n\r\nconst rank2Value = {\r\n  \"A\": 11,\r\n  \"2\": 2,\r\n  \"3\": 3,\r\n  \"4\": 4,\r\n  \"5\": 5,\r\n  \"6\": 6,\r\n  \"7\": 7,\r\n  \"8\": 8,\r\n  \"9\": 9,\r\n  \"J\": 10,\r\n  \"Q\": 10,\r\n  \"K\": 10\r\n}\r\n\r\nexport function sumCards(cardArr)\r\n{\r\n  var total = 0\r\n  var aces = 0 // count aces\r\n  for (var i = 0; i < cardArr.length; i++) {\r\n    const rank = cardArr[i].rank\r\n    if (rank === \"A\") {\r\n      aces++\r\n    } else {\r\n      const value = rank2Value[rank]\r\n      total += value\r\n    }\r\n  }\r\n  for (var a = 0; a < aces; a++) {\r\n    if (11-aces+a+1 <= total) {\r\n      total += 1\r\n    } else {\r\n      total += 11\r\n    }\r\n  }\r\n return total;\r\n}\r\n\r\n\r\n// Turn into component\r\n// export function renderDeck()\r\n// {\r\n//   document.getElementById(\"deck\").innerHTML = \"\";\r\n\r\n//   for(let i = 0; i < deck.length; i++)\r\n//   {\r\n//     let card = document.createElement(\"div\");\r\n//     let value = document.createElement(\"div\");\r\n//     let suit = document.createElement(\"div\");\r\n//     card.className = \"card\";\r\n//     value.className = \"value\";\r\n//     suit.className = \"suit \" + deck[i].Suit;\r\n\r\n//     value.innerHTML = deck[i].Value;\r\n//     card.appendChild(value);\r\n//     card.appendChild(suit);\r\n\r\n//     document.getElementById(\"deck\").appendChild(card);\r\n//   }\r\n// }\r\n","import React, { Component } from 'react';\r\n\r\nimport Player from './Player';\r\nimport {sumCards} from './utils';\r\n\r\nclass PlayerContainer extends Component {\r\n  state = {\r\n    bank: 500,\r\n    bet: 10 // How to handle doubling?\r\n  }\r\n\r\n  render() {\r\n    const {cards, bust} = this.props.player\r\n    const total = sumCards(cards)\r\n    return (\r\n     <Player\r\n      id={this.props.id}\r\n      cards={cards}\r\n      total={total}\r\n      bust={bust}\r\n    />\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlayerContainer;\r\n","import React from 'react';\r\nimport './Dealer.css';\r\n\r\nconst Dealer = props => {\r\n  return (\r\n    <div className=\"dealer\">\r\n      Dealer goes here\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dealer;\r\n","import React, { Component } from 'react';\r\n\r\nimport Dealer from './Dealer';\r\n\r\nclass DealerContainer extends Component {\r\n  render() {\r\n    return (\r\n     <Dealer id={this.props.id}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DealerContainer;\r\n","import React from 'react';\r\nimport './Spanish21Shoe.css';\r\n\r\nimport Card from './CardContainer.js'\r\n\r\nconst Spanish21Shoe = props => {\r\n  return (\r\n    <div className=\"spanish21-shoe\">\r\n      <Card card={props.currentCard}/>\r\n      <div>\r\n        Cards Left: {props.cardsLeft}\r\n      </div>\r\n      <button onClick={props.dealCard}>\r\n        Deal Card\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spanish21Shoe;\r\n","import React, { Component } from 'react';\r\n\r\nimport Spanish21Shoe from './Spanish21Shoe';\r\n\r\n\r\nclass Spanish21ShoeContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Spanish21Shoe\r\n        dealCard={this.props.dealCard}\r\n        cardsLeft={this.props.shoe.length}\r\n        currentCard={this.props.card}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Spanish21ShoeContainer;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Spanish21.css';\r\n\r\nimport Player from './PlayerContainer';\r\nimport Dealer from './DealerContainer';\r\nimport Spanish21Shoe from './Spanish21ShoeContainer';\r\n\r\nimport {shuffle, getDecks} from './utils'\r\n\r\nclass Spanish21 extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.dealRound = this.dealRound.bind(this)\r\n    this.dealCard = this.dealCard.bind(this)\r\n    this.state = {\r\n      shoe: shuffle(getDecks(8)),\r\n      players: [\r\n        {bust: false, cards: []},\r\n        {bust: false, cards: []},\r\n        {bust: false, cards: []},\r\n        {bust: false, cards: []},\r\n        {bust: false, cards: []},\r\n        {bust: false, cards: []}\r\n      ],\r\n      card: null // Remove this later\r\n    }\r\n  }\r\n  dealRound() {\r\n    this.state.players.map(\r\n      player => player.cards = [this.dealCard(), this.dealCard(), this.dealCard()]\r\n    )\r\n    this.setState({players: this.state.players})\r\n  }\r\n\r\n  dealCard() {\r\n\r\n    const card = this.state.shoe.pop()\r\n    const shoe =  this.state.shoe.length === 0 ? shuffle(getDecks(8)) : this.state.shoe\r\n    this.setState({shoe, card})\r\n    console.log(card)\r\n    return card\r\n  }\r\n  // Game should have min and max bet\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"dealerside\">\r\n          <Dealer />\r\n          <Spanish21Shoe\r\n            shoe={this.state.shoe}\r\n            card={this.state.card}\r\n            dealCard={this.dealCard}\r\n          />\r\n        </div>\r\n        <div className=\"players\">\r\n          {\r\n            this.state.players.map(\r\n              (player, index) => {\r\n                return (\r\n                  <Player\r\n                    key={index}\r\n                    player={player}\r\n                    id={index}\r\n                  />\r\n                )\r\n              }\r\n            )\r\n          }\r\n        </div>\r\n        <div>\r\n          <button onClick={this.dealRound}>\r\n            Deal Round\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spanish21;\r\n","import React from 'react';\r\nimport Spanish21 from './Spanish21';\r\n\r\nfunction App() {\r\n  return <Spanish21 />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}